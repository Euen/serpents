%% -*- mode: erlang;erlang-indent-level: 2;indent-tabs-mode: nil -*-
%% ex: ts=4 sw=4 ft=erlang et

%% == Erlang Compiler ==

%% Erlang compiler options
{erl_opts, [ warn_unused_vars
           , warnings_as_errors
           , ewarn_export_all
           , warn_shadow_vars
           , warn_unused_import
           , warn_unused_function
           , warn_bif_clash
           , warn_unused_record
           , warn_deprecated_function
           , warn_obsolete_guard
           , strict_validation
           , warn_export_vars
           , warn_exported_vars
           , warn_missing_spec
           , debug_info
           , {parse_transform, lager_transform}
           ]}.

%% == Dependencies ==

{deps, [ {lasse,          "1.1.1"}
       , {katana,         "0.3.1"}
       , {lager,          "3.5.1"}
       , {cowboy,         "1.0.4"}
       , {jiffy,          "0.14.11"}
       , {mixer,          "0.1.5", {pkg, inaka_mixer}}
       , {cowboy_swagger, "1.2.3"}
       , {trails,         "0.2.1"}
       , {recon,          "2.3.2"}
       , {epocxy,         "1.1.0"}
       ]}.

%% == Profiles ==

{profiles, [
  {test, [
    {deps, [ {xref_runner, {git, "https://github.com/inaka/xref_runner.git", {tag, "0.2.2"}}}
           , {katana_test, "0.1.1"}
           , {shotgun,     {git, "https://github.com/inaka/shotgun.git", {tag, "0.1.12"}}}
    ]}
  ]}
]}.

%% == Common Test ==

{ct_compile_opts, [ warn_unused_vars
                  , warn_export_all
                  , warn_shadow_vars
                  , warn_unused_import
                  , warn_unused_function
                  , warn_bif_clash
                  , warn_unused_record
                  , warn_deprecated_function
                  , warn_obsolete_guard
                  , strict_validation
                  , warn_export_vars
                  , warn_exported_vars
                  , warn_missing_spec
                  , debug_info
                  , {parse_transform, lager_transform}
                  ]}.

{ct_opts, [
  {sys_config, ["test/test.config"]}
]}.

%% == Cover ==

{cover_enabled, true}.

{cover_opts, [verbose]}.

%% == Dialyzer ==

{dialyzer, [ {warnings, [ no_return
                        , unmatched_returns
                        , error_handling
                        , unknown
                        ]}
           , {plt_apps, top_level_deps}
           , {plt_extra_apps, []}
           , {plt_location, local}
           , {base_plt_apps, [erts, stdlib, kernel]}
           , {base_plt_location, global}]}.

{relx, [ {release, {"serpents", "0.0.1"}, [serpents]},
         {overlay, [ {copy, "www", "www"}
                   , {copy, "HDP.md", "HDP.md"}
                   , {copy, "HTTP.md", "HTTP.md"}
                   ]},
        {sys_config, "config/sys.config"},
        {include_src, false},
        {include_erts, false},
        {extended_start_script, true}]}.